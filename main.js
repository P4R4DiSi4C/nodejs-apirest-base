// doc : http://www.restapitutorial.com/httpstatuscodes.html

// env vars are in .env file
require('dotenv').config();

// incase we want to connect mongoose, set vars in .env
require('./utils/connection').db_connect();

// http server lib
const app         = require('express')();
// request logger lib
const morgan      = require('morgan');
// easily parse request bodies with this lib -> in our case json
const body_parser = require('body-parser');
// Allow Access-Control-Allow-Origin
const cors = require('cors');
// allow easy file uploading with express
const file_upload = require('express-fileupload');

// our error handler controller is here
const errors_controller = require('./controller/errorscontroller');
// our authentification instance
const auth_middleware   = require('./middleware/auth');
// routes
const users    = require('./routes/users')(auth_middleware);
const files    = require('./routes/files')(auth_middleware);

// globals
global.status = {
    OK           : 200,
    CREATED      : 201,
    NO_CONTENT   : 204,
    UNAUTHORIZED : 401,
    NOT_FOUND    : 404,
    ERROR        : 500
}
global.env  = process.env.ENV;
global.math = require('./utils/math');

// setup
// disable autogenerated status code -> e.g : 304 status
app.set('etag', false);

app.use(morgan('dev'));
app.use(cors());
app.use(body_parser.json());
app.use(file_upload({ safeFileNames: /([A-Z]|[a-z]|[0-9]|_|-|\.|\s)+/ }));

// routes
app.use('/users', users);
app.use('/files', files);

// error handler
app.use(errors_controller.not_found);
app.use(errors_controller.error_handler);

const port = process.env.HTTP_PORT;

// listen for new request
app.listen(port, () => {
    console.log('environment       :', global.env);
    console.log('listening on port :', port);
});